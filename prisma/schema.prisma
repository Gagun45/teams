generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  name          String
  email         String        @unique
  emailVerified DateTime?
  password      String?
  role          UserRoles     @default(user)
  teams         TeamMember[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  createdTeams  Team[]
  TeamMessage   TeamMessage[]
}

model Team {
  id   String @id @default(cuid())
  name String

  creator   User   @relation(fields: [creatorId], references: [id])
  creatorId String

  members     TeamMember[]
  TeamMessage TeamMessage[]

  joinLinkToken String @unique @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TeamMember {
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId String

  teamRole TeamRoles

  @@id([userId, teamId])
}

model TeamMessage {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId String

  message String

  softDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRoles {
  user
  admin
}

enum TeamRoles {
  viewer
  admin
  owner
}
